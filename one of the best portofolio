<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Premium Glass Portfolio</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="glass-container">
        <div class="bg-animation">
            <div class="gradient-orb orb1"></div>
            <div class="gradient-orb orb2"></div>
            <div class="gradient-orb orb3"></div>
        </div>

        <div id="rain-container"></div>

        <nav class="glass-nav">
            <div class="nav-brand">Portfolio</div>
            <div class="nav-links">
                <a href="#home" class="nav-link active">Home</a>
                <a href="#about" class="nav-link">About</a>
                <a href="#projects" class="nav-link">Projects</a>
                <a href="#contact" class="nav-link">Contact</a>
            </div>
        </nav>

        <section id="home" class="hero">
            <div class="hero-content">
                <div class="glass-card hero-card">
                    <div class="hero-text">
                        <h1 class="hero-title">
                            <span class="gradient-text">Creative</span>
                            <span class="glass-text">Developer</span>
                        </h1>
                        <p class="hero-subtitle">Crafting digital experiences with precision and passion</p>
                        <div class="cta-buttons">
                            <button class="btn-primary glass-btn">View Work</button>
                            <button class="btn-secondary glass-btn">Get in Touch</button>
                        </div>
                    </div>
                    <div class="hero-visual">
                        <div class="floating-elements">
                            <div class="floating-card card1"></div>
                            <div class="floating-card card2"></div>
                            <div class="floating-card card3"></div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section id="about" class="about">
            <div class="section-content">
                <div class="glass-card">
                    <h2 class="section-title gradient-text">About Me</h2>
                    <div class="about-grid">
                        <div class="about-text">
                            <p>I'm a passionate developer who believes in creating digital experiences that not only look stunning but also provide exceptional user value. With expertise in modern web technologies, I transform ideas into reality.</p>
                            <div class="skills">
                                <div class="skill-tag">React</div>
                                <div class="skill-tag">TypeScript</div>
                                <div class="skill-tag">Node.js</div>
                                <div class="skill-tag">UI/UX</div>
                                <div class="skill-tag">3D Graphics</div>
                            </div>
                        </div>
                        <div class="about-visual">
                            <div class="profile-card glass-card">
                                <div class="profile-image"></div>
                                <div class="profile-stats">
                                    <div class="stat">
                                        <div class="stat-number">50+</div>
                                        <div class="stat-label">Projects</div>
                                    </div>
                                    <div class="stat">
                                        <div class="stat-number">3+</div>
                                        <div class="stat-label">Years</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section id="projects" class="projects">
            <div class="section-content">
                <h2 class="section-title gradient-text">Featured Projects</h2>
                <div class="projects-grid">
                    <div class="project-card glass-card">
                        <div class="project-image project1"></div>
                        <div class="project-content">
                            <h3>E-Commerce Platform</h3>
                            <p>Modern shopping experience with AI recommendations</p>
                            <div class="project-tags">
                                <span>React</span>
                                <span>Node.js</span>
                                <span>AI/ML</span>
                            </div>
                        </div>
                    </div>
                    <div class="project-card glass-card">
                        <div class="project-image project2"></div>
                        <div class="project-content">
                            <h3>Design System</h3>
                            <p>Comprehensive UI component library</p>
                            <div class="project-tags">
                                <span>Design</span>
                                <span>Components</span>
                                <span>Figma</span>
                            </div>
                        </div>
                    </div>
                    <div class="project-card glass-card">
                        <div class="project-image project3"></div>
                        <div class="project-content">
                            <h3>Mobile App</h3>
                            <p>Cross-platform productivity application</p>
                            <div class="project-tags">
                                <span>React Native</span>
                                <span>Mobile</span>
                                <span>UX</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section id="contact" class="contact">
            <div class="section-content">
                <div class="glass-card contact-card">
                    <h2 class="section-title gradient-text">Let's Connect</h2>
                    <p>Ready to bring your ideas to life? Let's create something amazing together.</p>
                    <div class="contact-methods">
                        <div class="contact-item glass-btn">
                            <span>üìß</span>
                            <span>hello@portfolio.com</span>
                        </div>
                        <div class="contact-item glass-btn">
                            <span>üíº</span>
                            <span>LinkedIn</span>
                        </div>
                        <div class="contact-item glass-btn">
                            <span>üêô</span>
                            <span>GitHub</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <style>
/* Reset and Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
    background: #000;
    color: #fff;
    overflow-x: hidden;
    min-height: 100vh;
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z" fill="%2300BFFF" opacity="0.8"/></svg>'), auto;
}

/* Glass Container */
.glass-container {
    position: relative;
    min-height: 100vh;
    background: radial-gradient(circle at 20% 80%, rgba(0, 191, 255, 0.4), transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(30, 144, 255, 0.4), transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(0, 206, 209, 0.4), transparent 50%),
                radial-gradient(circle at 60% 10%, rgba(64, 224, 208, 0.3), transparent 40%),
                radial-gradient(circle at 10% 50%, rgba(0, 255, 255, 0.3), transparent 40%),
                linear-gradient(135deg, #001122, #002244, #003366, #004488);
}

/* Dynamic Background Animation */
.bg-animation {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: -1;
}

.gradient-orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(80px);
    animation: float 20s infinite ease-in-out;
}

/* Rain Effect */
.rain {
    position: fixed;
    top: -100px;
    width: 2px;
    height: 100px;
    background: linear-gradient(to bottom, transparent, rgba(0, 191, 255, 0.6), transparent);
    animation: rainFall linear infinite;
    pointer-events: none;
    z-index: 1;
}

@keyframes rainFall {
    0% {
        transform: translateY(-100vh);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(100vh);
        opacity: 0;
    }
}

.orb1 {
    width: 400px;
    height: 400px;
    background: linear-gradient(45deg, #00BFFF, #1E90FF, #00CED1, #40E0D0);
    top: 10%;
    left: 10%;
    animation-delay: 0s;
}

.orb2 {
    width: 300px;
    height: 300px;
    background: linear-gradient(45deg, #00CED1, #20B2AA, #48D1CC, #5F9EA0);
    top: 60%;
    right: 10%;
    animation-delay: -7s;
}

.orb3 {
    width: 500px;
    height: 500px;
    background: linear-gradient(45deg, #1E90FF, #4169E1, #6495ED, #87CEEB);
    bottom: 10%;
    left: 50%;
    animation-delay: -14s;
}

@keyframes float {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    33% { transform: translate(30px, -30px) rotate(120deg); }
    66% { transform: translate(-20px, 20px) rotate(240deg); }
}

/* Glass Morphism Base */
.glass-card {
    background: rgba(0, 191, 255, 0.05);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(0, 191, 255, 0.2);
    border-radius: 24px;
    box-shadow: 0 8px 32px rgba(0, 150, 200, 0.3);
    transition: all 0.3s ease;
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><circle cx="12" cy="12" r="10" fill="%2300BFFF" opacity="0.3"/><path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z" fill="%2300BFFF"/></svg>'), pointer;
}

.glass-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(0, 150, 200, 0.5);
    border-color: rgba(0, 191, 255, 0.4);
    background: rgba(0, 191, 255, 0.08);
}

/* Navigation */
.glass-nav {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
    padding: 16px 32px;
    background: rgba(0, 191, 255, 0.08);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(0, 191, 255, 0.2);
    border-radius: 50px;
    display: flex;
    align-items: center;
    gap: 32px;
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z" fill="%2300BFFF"/></svg>'), auto;
}

.nav-brand {
    font-weight: 700;
    font-size: 18px;
    background: linear-gradient(45deg, #00BFFF, #1E90FF, #00CED1);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.nav-links {
    display: flex;
    gap: 24px;
}

.nav-link {
    color: rgba(0, 191, 255, 0.8);
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
    padding: 8px 16px;
    border-radius: 20px;
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"><circle cx="12" cy="12" r="8" fill="%2300BFFF" opacity="0.5"/></svg>'), pointer;
}

.nav-link:hover,
.nav-link.active {
    color: #00BFFF;
    background: rgba(0, 191, 255, 0.1);
    box-shadow: 0 4px 15px rgba(0, 191, 255, 0.3);
}

/* Hero Section */
.hero {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 40px;
}

.hero-content {
    max-width: 1200px;
    width: 100%;
}

.hero-card {
    padding: 60px;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: center;
}

.hero-title {
    font-size: 4rem;
    font-weight: 800;
    line-height: 1.1;
    margin-bottom: 24px;
}

.gradient-text {
    background: linear-gradient(45deg, #00BFFF, #1E90FF, #00CED1, #40E0D0, #5F9EA0);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientShift 3s ease-in-out infinite;
}

.glass-text {
    color: rgba(255, 255, 255, 0.9);
}

@keyframes gradientShift {
    0%, 100% { 
        filter: hue-rotate(0deg) saturate(1.2) brightness(1.1); 
        background-position: 0% 50%;
    }
    25% { 
        filter: hue-rotate(90deg) saturate(1.4) brightness(1.2); 
        background-position: 100% 50%;
    }
    50% { 
        filter: hue-rotate(180deg) saturate(1.3) brightness(1.15); 
        background-position: 100% 100%;
    }
    75% { 
        filter: hue-rotate(270deg) saturate(1.4) brightness(1.2); 
        background-position: 0% 100%;
    }
}

@keyframes gradientFlow {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

.hero-subtitle {
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 40px;
    font-weight: 300;
}

.cta-buttons {
    display: flex;
    gap: 20px;
}

.glass-btn {
    padding: 16px 32px;
    border-radius: 50px;
    border: 1px solid rgba(0, 191, 255, 0.3);
    background: rgba(0, 191, 255, 0.1);
    backdrop-filter: blur(10px);
    color: #fff;
    font-weight: 600;
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><circle cx="12" cy="12" r="10" fill="%2300BFFF" opacity="0.4"/><path d="M12 8v8M8 12h8" stroke="%23ffffff" stroke-width="2"/></svg>'), pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-block;
}

.btn-primary {
    background: linear-gradient(45deg, #00BFFF, #1E90FF, #00CED1);
    border: none;
    box-shadow: 0 0 30px rgba(0, 191, 255, 0.5);
}

.btn-secondary {
    background: rgba(0, 191, 255, 0.05);
}

.glass-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 191, 255, 0.4);
    background: rgba(0, 191, 255, 0.2);
}

/* Hero Visual */
.hero-visual {
    position: relative;
    height: 400px;
}

.floating-elements {
    position: relative;
    width: 100%;
    height: 100%;
}

.floating-card {
    position: absolute;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 20px;
    animation: floatCards 6s ease-in-out infinite;
}

.card1 {
    width: 200px;
    height: 120px;
    top: 20%;
    left: 10%;
    background: linear-gradient(45deg, rgba(0, 191, 255, 0.4), rgba(30, 144, 255, 0.4), rgba(0, 206, 209, 0.4));
    box-shadow: 0 0 40px rgba(0, 191, 255, 0.3);
}

.card2 {
    width: 160px;
    height: 100px;
    top: 50%;
    right: 20%;
    animation-delay: -2s;
    background: linear-gradient(45deg, rgba(64, 224, 208, 0.4), rgba(32, 178, 170, 0.4), rgba(72, 209, 204, 0.4));
    box-shadow: 0 0 40px rgba(64, 224, 208, 0.3);
}

.card3 {
    width: 180px;
    height: 110px;
    bottom: 20%;
    left: 30%;
    animation-delay: -4s;
    background: linear-gradient(45deg, rgba(30, 144, 255, 0.4), rgba(65, 105, 225, 0.4), rgba(100, 149, 237, 0.4));
    box-shadow: 0 0 40px rgba(30, 144, 255, 0.3);
}

@keyframes floatCards {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(5deg); }
}

/* Sections */
.section-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 100px 40px;
}

.section-title {
    font-size: 3rem;
    font-weight: 700;
    text-align: center;
    margin-bottom: 60px;
}

/* About Section */
.about-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: center;
}

.about-text {
    font-size: 1.1rem;
    line-height: 1.8;
    color: rgba(255, 255, 255, 0.8);
}

.skills {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
    margin-top: 30px;
}

.skill-tag {
    padding: 8px 16px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 500;
}

.profile-card {
    padding: 30px;
    text-align: center;
}

.profile-image {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
    margin: 0 auto 20px;
}

.profile-stats {
    display: flex;
    justify-content: space-around;
}

.stat-number {
    font-size: 2rem;
    font-weight: 700;
    color: #4ecdc4;
}

.stat-label {
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.7);
}

/* Projects Section */
.projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 30px;
}

.project-card {
    padding: 0;
    overflow: hidden;
    transition: all 0.3s ease;
}

.project-image {
    height: 200px;
    background-size: cover;
    background-position: center;
}

.project1 { 
    background: linear-gradient(45deg, #00BFFF, #1E90FF, #00CED1);
    box-shadow: 0 10px 30px rgba(0, 191, 255, 0.4);
}
.project2 { 
    background: linear-gradient(45deg, #40E0D0, #00CED1, #5F9EA0);
    box-shadow: 0 10px 30px rgba(64, 224, 208, 0.4);
}
.project3 { 
    background: linear-gradient(45deg, #1E90FF, #4169E1, #6495ED);
    box-shadow: 0 10px 30px rgba(30, 144, 255, 0.4);
}

.project-content {
    padding: 30px;
}

.project-content h3 {
    font-size: 1.4rem;
    margin-bottom: 10px;
    color: #fff;
}

.project-content p {
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 20px;
    line-height: 1.6;
}

.project-tags {
    display: flex;
    gap: 8px;
}

.project-tags span {
    padding: 4px 12px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    font-size: 0.8rem;
}

/* Contact Section */
.contact-card {
    padding: 60px;
    text-align: center;
}

.contact-card p {
    font-size: 1.2rem;
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 40px;
}

.contact-methods {
    display: flex;
    justify-content: center;
    gap: 20px;
    flex-wrap: wrap;
}

.contact-item {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 16px 24px;
    font-size: 1rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .hero-card {
        grid-template-columns: 1fr;
        text-align: center;
        padding: 40px 30px;
    }
    
    .hero-title {
        font-size: 2.5rem;
    }
    
    .about-grid {
        grid-template-columns: 1fr;
        text-align: center;
    }
    
    .nav-links {
        display: none;
    }
    
    .cta-buttons {
        flex-direction: column;
        align-items: center;
    }
    
    .contact-methods {
        flex-direction: column;
        align-items: center;
    }
}
    </style>

    <script>
// Create Rain Effect
function createRain() {
    const rainContainer = document.getElementById('rain-container');
    
    function createRainDrop() {
        const drop = document.createElement('div');
        drop.className = 'rain';
        drop.style.left = Math.random() * window.innerWidth + 'px';
        drop.style.animationDuration = (Math.random() * 3 + 2) + 's';
        drop.style.opacity = Math.random() * 0.6 + 0.4;
        rainContainer.appendChild(drop);
        
        setTimeout(() => {
            if (drop.parentNode) {
                drop.parentNode.removeChild(drop);
            }
        }, 5000);
    }
    
    // Create initial rain
    for (let i = 0; i < 100; i++) {
        setTimeout(createRainDrop, Math.random() * 2000);
    }
    
    // Continue creating rain drops
    setInterval(createRainDrop, 100);
}

// Water ripple effect on click for interactive elements
function createRipple(e, element) {
    const rect = element.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    
    const ripple = document.createElement('div');
    ripple.style.position = 'absolute';
    ripple.style.left = x + 'px';
    ripple.style.top = y + 'px';
    ripple.style.width = '0px';
    ripple.style.height = '0px';
    ripple.style.borderRadius = '50%';
    ripple.style.background = 'rgba(0, 191, 255, 0.3)';
    ripple.style.transform = 'translate(-50%, -50%)';
    ripple.style.animation = 'ripple 0.6s linear';
    ripple.style.pointerEvents = 'none';
    
    element.style.position = 'relative'; // Ensure the parent is positioned for absolute ripple
    element.appendChild(ripple);
    
    setTimeout(() => {
        if (ripple.parentNode) {
            ripple.parentNode.removeChild(ripple);
        }
    }, 600);
}

// Add ripple animation keyframes
const style = document.createElement('style');
style.textContent = `
    @keyframes ripple {
        to {
            width: 200px;
            height: 200px;
            opacity: 0;
        }
    }
`;
document.head.appendChild(style);

// Enhanced water cursor effects (mouse trail and glass card parallax)
document.addEventListener('mousemove', function(e) {
    // Create water trail effect
    const trail = document.createElement('div');
    trail.style.position = 'fixed';
    trail.style.left = e.clientX + 'px';
    trail.style.top = e.clientY + 'px';
    trail.style.width = '6px';
    trail.style.height = '6px';
    trail.style.borderRadius = '50%';
    trail.style.background = 'rgba(0, 191, 255, 0.5)';
    trail.style.pointerEvents = 'none';
    trail.style.zIndex = '9999';
    trail.style.transform = 'translate(-50%, -50%)';
    trail.style.animation = 'fadeOut 1s ease-out forwards';
    
    document.body.appendChild(trail);
    
    setTimeout(() => {
        if (trail.parentNode) {
            trail.parentNode.removeChild(trail);
        }
    }, 1000);
    
    // Mouse tracking code for glass effects
    const cards = document.querySelectorAll('.glass-card');
    
    cards.forEach(card => {
        const rect = card.getBoundingClientRect();
        const centerX = rect.left + rect.width / 2;
        const centerY = rect.top + rect.height / 2;
        
        const deltaX = e.clientX - centerX;
        const deltaY = e.clientY - centerY;
        
        const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
        const maxDistance = 300;
        
        if (distance < maxDistance) {
            const strength = (maxDistance - distance) / maxDistance;
            const rotateX = (deltaY / rect.height) * 10 * strength;
            const rotateY = (deltaX / rect.width) * 10 * strength;
            
            card.style.transform = `perspective(1000px) rotateX(${-rotateX}deg) rotateY(${rotateY}deg) translateZ(${strength * 20}px)`;
            card.style.boxShadow = `0 ${20 + strength * 20}px ${40 + strength * 20}px rgba(0, 191, 255, ${0.3 + strength * 0.2})`;
        } else {
            card.style.transform = '';
            card.style.boxShadow = '';
        }
    });
});

// Add fadeOut animation for the cursor trail
const fadeStyle = document.createElement('style');
fadeStyle.textContent = `
    @keyframes fadeOut {
        0% {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1);
        }
        100% {
            opacity: 0;
            transform: translate(-50%, -50%) scale(3);
        }
    }
`;
document.head.appendChild(fadeStyle);

// Add ripple effects to interactive elements on click
document.querySelectorAll('.glass-btn, .nav-link, .project-card').forEach(element => {
    element.addEventListener('click', function(e) {
        createRipple(e, this);
    });
});

// Smooth scrolling for navigation
document.querySelectorAll('.nav-link').forEach(link => {
    link.addEventListener('click', function(e) {
        e.preventDefault();
        const targetId = this.getAttribute('href');
        const targetSection = document.querySelector(targetId);
        
        if (targetSection) {
            targetSection.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
        
        // Update active nav link
        document.querySelectorAll('.nav-link').forEach(l => l.classList.remove('active'));
        this.classList.add('active');
    });
});

// Enhanced parallax and scroll effects
let ticking = false;

function updateScrollEffects() {
    const scrollY = window.pageYOffset;
    const windowHeight = window.innerHeight;
    
    // Parallax for background orbs
    const orbs = document.querySelectorAll('.gradient-orb');
    orbs.forEach((orb, index) => {
        const speed = 0.5 + (index * 0.2);
        orb.style.transform = `translateY(${scrollY * speed}px)`;
    });
    
    // Parallax for floating cards
    const floatingCards = document.querySelectorAll('.floating-card');
    floatingCards.forEach((card, index) => {
        const speed = 0.3 + (index * 0.1);
        card.style.transform = `translateY(${scrollY * speed}px) rotate(${scrollY * 0.05}deg)`;
    });
    
    // Glass cards animation on scroll
    const glassCards = document.querySelectorAll('.glass-card');
    glassCards.forEach(card => {
        const rect = card.getBoundingClientRect();
        const isVisible = rect.top < windowHeight && rect.bottom > 0;
        
        if (isVisible) {
            const progress = Math.max(0, Math.min(1, (windowHeight - rect.top) / windowHeight));
            card.style.opacity = progress;
            card.style.transform = `translateY(${(1 - progress) * 50}px)`;
        }
    });
    
    ticking = false;
}

function requestScrollUpdate() {
    if (!ticking) {
        requestAnimationFrame(updateScrollEffects);
        ticking = true;
    }
}

window.addEventListener('scroll', requestScrollUpdate);

// Button hover effects
document.querySelectorAll('.glass-btn').forEach(btn => {
    btn.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-3px) scale(1.05)';
        this.style.boxShadow = '0 15px 35px rgba(0, 0, 0, 0.4)';
    });
    
    btn.addEventListener('mouseleave', function() {
        this.style.transform = '';
        this.style.boxShadow = '';
    });
});

// Dynamic gradient animation with unique world-first color combinations
function animateGradients() {
    const gradientTexts = document.querySelectorAll('.gradient-text');
    gradientTexts.forEach(text => {
        const time = Date.now() / 50;
        const hue1 = (time) % 360;
        const hue2 = (time + 72) % 360;  // Golden ratio based spacing
        const hue3 = (time + 144) % 360;
        const hue4 = (time + 216) % 360;
        const hue5 = (time + 288) % 360;
        
        // Revolutionary 5-color gradient that shifts through the entire spectrum
        text.style.background = `linear-gradient(45deg, 
            hsl(${hue1}, 85%, 65%), 
            hsl(${hue2}, 90%, 70%), 
            hsl(${hue3}, 85%, 65%),
            hsl(${hue4}, 90%, 70%),
            hsl(${hue5}, 85%, 65%))`;
        text.style.webkitBackgroundClip = 'text';
        text.style.backgroundClip = 'text';
        text.style.backgroundSize = '400% 400%';
        text.style.animation = 'gradientFlow 4s ease-in-out infinite';
    });
    
    requestAnimationFrame(animateGradients);
}

animateGradients();

// Initialize scroll effects
updateScrollEffects();

// Add loading animation and start rain effect
window.addEventListener('load', function() {
    document.body.style.opacity = '0';
    document.body.style.transition = 'opacity 1s ease-in-out';
    
    setTimeout(() => {
        document.body.style.opacity = '1';
    }, 100);
    
    // Start rain effect after body loads
    createRain(); 
});

// Enhanced floating animation for hero elements
function enhanceFloatingAnimation() {
    const floatingElements = document.querySelectorAll('.floating-card');
    
    floatingElements.forEach((element, index) => {
        const time = Date.now() * 0.001;
        const amplitude = 10 + index * 5;
        const frequency = 0.5 + index * 0.2;
        const phase = index * Math.PI * 0.5;
        
        const y = Math.sin(time * frequency + phase) * amplitude;
        const rotation = Math.cos(time * frequency * 0.5 + phase) * 5;
        
        element.style.transform += ` translateY(${y}px) rotate(${rotation}deg)`;
    });
    
    requestAnimationFrame(enhanceFloatingAnimation);
}

enhanceFloatingAnimation();
    </script>
</body>
</html>
